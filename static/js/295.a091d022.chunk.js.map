{"version":3,"file":"static/js/295.a091d022.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/main/Main.jsx","pages/movies.styled.jsx","pages/Movies.jsx","services/useFetchApi.jsx"],"sourcesContent":["import {NavLink} from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport {experimentalStyled as styled} from '@mui/material/styles';\n\n\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: flex;\n  color: black;\n  padding: 2px 15px;\n  margin-left: 20px;\n  min-width: 20px;\n  text-decoration: none;\n  border: 1px solid white;\n  border-radius: 4px;\n\n  :hover,\n  :focus-visible {\n    color: darkcyan;\n`;\n\nexport const MovieBox = styled(Box)`\n  display: flex;\n  margin-left: 15px;\n  text-align: left;\n`;\n\nexport const Item = styled(Paper)(({theme}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n}));\n","import {useLocation} from \"react-router-dom\";\nimport {Avatar} from \"@mui/material\";\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport {Item, MovieBox, NavLinkStyled} from \"./MoviesList.styled\";\nimport genericFilmPic from '../../img/film.jpg'\nimport PropTypes, {arrayOf} from \"prop-types\";\n\n\nexport const MoviesList = ({movies}) => {\n  const location = useLocation();\n\n  return (\n    <Box sx={{flexGrow: 1}}>\n      <Grid container spacing={{xs: 2, md: 3}} columns={{xs: 4, sm: 8, md: 12}}>\n\n        {movies.map(({id, original_title, backdrop_path}) => (\n          <Grid xs={2} sm={4} md={4} key={id}>\n            <Item>\n\n              <Avatar sx={{width: 88, height: 50}}\n                      alt=\"film picture\"\n                      src={backdrop_path ? `https://image.tmdb.org/t/p/w154/${backdrop_path}` : genericFilmPic}\n                      variant=\"rounded\"\n              />\n\n              <MovieBox>\n                <NavLinkStyled to={`/movies/${id}`} state={{from: location}}>\n                  {original_title}\n                </NavLinkStyled>\n              </MovieBox>\n\n            </Item>\n          </Grid>\n        ))}\n\n      </Grid>\n    </Box>\n  )\n};\n\nMoviesList.propTypes = {\n  movies: arrayOf(PropTypes.object),\n}\n\n\n/*\nThis should be used: https://image.tmdb.org/t/p/ {SIZE}\n  Examples:\n    https://image.tmdb.org/t/p/original/lSEr1nphZuCqXli3VziIgCI8Ivf.jpg\n      https://image.tmdb.org/t/p/w500/lSEr1nphZuCqXli3VziIgCI8Ivf.jpg\n        https://image.tmdb.org/t/p/w154/lSEr1nphZuCqXli3VziIgCI8Ivf.jpg\n*/\n","import Box from \"@mui/material/Box\";\nimport PropTypes from \"prop-types\";\n\n\nexport const Main = (props) => {\n  return (\n    <Box component='main'\n         sx={{\n           display: 'flex',\n           flexDirection: 'column',\n           padding: '10px',\n         }}\n    >\n      {props.children}\n    </Box>\n  )\n}\n\nMain.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n}\n","export const formStyles = {\n  display: 'flex',\n  height: '50px',\n  alignItems: 'flex-end',\n};\n\nexport const buttonStyles = {\n  display: 'flex',\n  height: '25px',\n  width: '50px',\n  marginLeft: '20px',\n};\n","import {useForm} from \"react-hook-form\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\n\nimport {useFetchApi} from \"../services/useFetchApi\";\n\nimport Box from \"@mui/material/Box\";\nimport TextField from '@mui/material/TextField';\nimport {Button} from \"@mui/material\";\nimport {MoviesList} from \"../components/MoviesList/MoviesList\";\nimport {buttonStyles, formStyles} from \"./movies.styled\";\nimport {Main} from \"../components/main/Main\";\n\nconst Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const {register, resetField, handleSubmit} = useForm();//todo: validation\n\n  const {movies} = useFetchApi(query, 'query');\n\n  const onSubmit = ({query}) => {\n    if (query && query.trim() !== '') {\n      const queryToUpdate = query.trim();\n      setSearchParams({query: queryToUpdate});\n    } else {\n      setSearchParams({});\n      resetField(\"query\");\n      toast('please input, what you want to find')\n    }\n  };\n\n  return (\n    <Main>\n\n      <Box component='form' noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}\n           sx={formStyles}\n      >\n        <TextField {...register(\"query\")} label='search query' variant=\"standard\" size=\"small\"\n                   defaultValue={query ? query : null}\n        >\n        </TextField>\n        <Button type=\"submit\" variant=\"outlined\" size=\"small\"\n                sx={buttonStyles}>\n          Search\n        </Button>\n      </Box>\n      <Box>\n        <MoviesList movies={movies}/>\n      </Box>\n\n    </Main>\n  );\n};\n\nexport default Movies;\n\n\n\n\n\n\n\n\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\nconst API_KEY = 'fe13ab826a741d40ca015441d0a0f529';\nconst BACKEND = 'https://api.themoviedb.org/3/';\n\n//todo: refactoring\n//todo: fetch error\n//todo: toastie\n\nconst fetchPopular = (setResult) => {\n  try {\n    axios(`${BACKEND}trending/movie/day?api_key=${API_KEY}`)\n      .then((response) => {\n        // console.log(response);\n        return setResult(response.data.results)\n      });\n  } catch (error) {\n    console.log(error);\n    // return error;\n  }\n};\n\nconst fetchMovieDetails = (setResult, movieId) => {\n  try {\n    axios(`${BACKEND}movie/${movieId}?api_key=${API_KEY}`)\n            .then((response) => {\n              return setResult(response.data)\n            });\n  } catch (error) {\n    console.log(error);\n    // return error;\n  }\n};\n\nconst fetchMovieCast = (setResult, movieId) => {\n  try {\n    axios(`${BACKEND}movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then((response) => {\n        return setResult(response.data.cast)\n      });\n  } catch (error) {\n    console.log(error);\n    // return error;\n  }\n};\n\nconst fetchMovieReviews = (setResult, movieId) => {\n  try {\n    axios(`${BACKEND}movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then((response) => {\n        return setResult(response.data.results)\n      });\n  } catch (error) {\n    console.log(error);\n    // return error;\n  }\n};\n\nconst fetchOnQuery = (setResult, query, page = 1) => {\n  const searchString = query.trim()\n  try {\n    if (!searchString || searchString === '') {\n      return []\n    }\n    axios(`${BACKEND}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`)\n      .then((response) => {\n        console.log(response);\n        const answer = response.data.results;\n        if (answer.length === 0) {\n          return toast('There no movies matched you request, try again please )')\n        }\n        return setResult(answer)\n      });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const useFetchApi = (query = '', type = 'popular', page = 1) => {\n\n  const [movies, setMovies] = useState([]);\n  const [movieDetails, setMovieDetails] = useState(0);\n  const [movieReviews, setMovieReviews] = useState('');\n  const [movieCast, setMovieCast] = useState('');\n\n  useEffect(() => {\n    try {//todo: refactoring to ternary\n      if (type === 'popular') {\n        fetchPopular(setMovies)\n      }\n      if (type === 'details' && query) {//todo: if (query.movieId)\n        fetchMovieDetails(setMovieDetails, query)\n      }\n      if (type === 'reviews' && query) {//todo: if (query.movieId)\n        fetchMovieReviews(setMovieReviews, query)\n      }\n      if (type === 'cast' && query) {//todo: if (query.movieId)\n        fetchMovieCast(setMovieCast, query);\n      }\n      if (type === 'query' && query === '') {\n        // console.log('emptyQ');\n        return\n      }\n      if (type === 'query') {//todo: if (query.movieId)\n        fetchOnQuery(setMovies, query)\n      }\n    } catch (error) {\n      // console.log(error.message);\n      return error;\n    }\n  }, [query, type]);\n\n  return {movies, movieDetails, movieReviews, movieCast}\n};\n\n\n"],"names":["NavLinkStyled","styled","NavLink","MovieBox","Box","Item","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","display","alignItems","justifyContent","MoviesList","movies","location","useLocation","sx","flexGrow","container","xs","md","columns","sm","map","id","original_title","backdrop_path","Avatar","width","height","alt","src","genericFilmPic","variant","to","state","from","Main","props","component","flexDirection","children","formStyles","buttonStyles","marginLeft","useSearchParams","searchParams","setSearchParams","query","get","useForm","register","resetField","handleSubmit","useFetchApi","noValidate","autoComplete","onSubmit","trim","queryToUpdate","toast","TextField","label","size","defaultValue","Button","type","API_KEY","BACKEND","fetchPopular","setResult","axios","then","response","data","results","error","console","log","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchOnQuery","page","searchString","answer","length","useState","setMovies","movieDetails","setMovieDetails","movieReviews","setMovieReviews","movieCast","setMovieCast","useEffect"],"sourceRoot":""}